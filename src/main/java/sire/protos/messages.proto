syntax= "proto3";

package sire.protos;

//Complementary
message ProtoSchnorr {
  bytes sigma = 1;
  bytes signPubKey = 2;
  bytes randomPubKey = 3;
}

message ProtoEvidence {
  bytes anchor = 1;
  string watzVersion = 2;
  bytes claim = 3;
  bytes servicePubKey = 4;
}

//=======Messages=======
message ProtoMessage0 {
  string attesterId = 1;
  bytes attesterPubSesKey = 2; //Ga
}

message ProtoMessage1 {
  bytes verifierPubSesKey = 1; //Gv
  bytes verifierPubKey = 2; //V
  ProtoSchnorr signatureSessionKeys = 3;  //Signv(Gv,Ga)
  bytes mac = 4; //MAC_Km(content1)
}

message ProtoMessage2 {
  bytes attesterPubSesKey = 1; //Ga
  ProtoEvidence evidence = 2; //evidence
  ProtoSchnorr signatureEvidence = 3; //Sign_A(Evidence)
  bytes mac = 4; //MAC_Km(content2)
}

message ProtoMessage3 {
  bytes iv = 1; //iv
  bytes encryptedData = 2; //Sign_V(Enc_A(data))
}

//=======ProxyMsg=======
message ProxyAttestationMessage {
  enum AttOperation {
      GENERATE_SIGNING_KEY = 0;
      GET_PUBLIC_KEY = 1;
      SIGN_DATA = 2;
      GET_DATA = 3;
      GET_RANDOM_NUMBER = 4;
  }
  AttOperation operation = 1;
  ProtoEvidence evidence = 2;
  ProtoSchnorr signature = 3;
  bytes dataToSign = 4;
}

message ProxyMapMessage {
  enum MapOperation {
    MAP_PUT = 0;
    MAP_DELETE = 1;
    MAP_GET = 2;
    MAP_LIST = 3;
    MAP_CAS = 4;
  }
  MapOperation operation = 1;
  bytes key = 2;
  bytes value = 3; //also serves as newData
  bytes oldData = 4;
}

message ProxyMessage {
  enum Operation {
    GENERATE_SIGNING_KEY = 0;
    GET_PUBLIC_KEY = 1;
    SIGN_DATA = 2;
    GET_DATA = 3;
    GET_RANDOM_NUMBER = 4;
    MAP_PUT = 5;
    MAP_DELETE = 6;
    MAP_GET = 7;
    MAP_LIST = 8;
    MAP_CAS = 9;
    JOIN = 10;
    LEAVE = 11;
    VIEW = 12;
    PING = 13;
    EXTENSION_ADD = 14;
    EXTENSION_REMOVE = 15;
    EXTENSION_GET = 16;
    POLICY_ADD = 17;
    POLICY_REMOVE = 18;
    POLICY_GET = 19;
  }
  Operation operation = 1;
  ProtoEvidence evidence = 2;
  ProtoSchnorr signature = 3;
  bytes dataToSign = 4;

  string key = 5;
  bytes value = 6; //also serves as newData
  bytes oldData = 7;

  string deviceId = 8;
  string appId = 9;

  string code = 10;
  enum ProtoExtType {
    EXT_JOIN = 0;
    EXT_LEAVE = 1;
    EXT_PING = 2;
    EXT_VIEW = 3;
    EXT_PUT = 4;
    EXT_DEL = 5;
    EXT_GET = 6;
    EXT_CAS = 7;
    EXT_LIST = 8;
  }
  ProtoExtType type = 11;

  string policy = 12;
}

message ProxyResponse {
  enum ResponseType {
    MAP_GET = 0;
    MAP_LIST = 1;
  }
  ResponseType type = 1;
  repeated bytes list = 2;
  bytes value = 3;
}