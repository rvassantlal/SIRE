syntax= "proto3";

import "google/protobuf/timestamp.proto";

package sire.messages;

//Complementary
message ProtoSchnorr {
  bytes sigma = 1;
  bytes signPubKey = 2;
  bytes randomPubKey = 3;
}

message ProtoEvidence {
  bytes anchor = 1;
  string watzVersion = 2;
  bytes claim = 3;
  bytes servicePubKey = 4;
}

//=======Messages=======
/*message ProtoMessage0 {
  string attesterId = 1;
  string appId = 2;
  bytes attesterPubSesKey = 3; //Ga
  ProtoDeviceType type = 4;
}

message ProtoMessage1 {
  bytes verifierPubSesKey = 1; //Gv
  bytes verifierPubKey = 2; //V
  ProtoSchnorr signatureSessionKeys = 3;  //Signv(Gv,Ga)
  bytes mac = 4; //MAC_Km(content1)
}

message ProtoMessage2 {
  string appId = 1;
  bytes attesterPubSesKey = 2; //Ga
  ProtoEvidence evidence = 3; //evidence
  ProtoSchnorr signatureEvidence = 4; //Sign_A(Evidence)
  bytes mac = 5; //MAC_Km(content2)
  string attesterId = 6;
}

message ProtoMessage3 {
  bytes iv = 1; //iv
  bytes encryptedData = 2; //Sign_V(Enc_A(data))
}*/

//=======ProxyMsg=======
/*message ProxyAttestationMessage {
  enum AttOperation {
      GENERATE_SIGNING_KEY = 0;
      GET_PUBLIC_KEY = 1;
      SIGN_DATA = 2;
      VERIFY = 3;
      GET_RANDOM_NUMBER = 4;
  }
  AttOperation operation = 1;
  ProtoEvidence evidence = 2;
  ProtoSchnorr signature = 3;
  bytes dataToSign = 4;
}

message ProxyMapMessage {
  enum MapOperation {
    MAP_PUT = 0;
    MAP_DELETE = 1;
    MAP_GET = 2;
    MAP_LIST = 3;
    MAP_CAS = 4;
  }
  MapOperation operation = 1;
  bytes key = 2;
  bytes value = 3; //also serves as newData
  bytes oldData = 4;
}*/

enum ProtoDeviceType {
  CAMERA = 0;
  THERMOMETER = 1;
  RADAR = 2;
  LIDAR = 3;
  MOTIONSENSOR = 4;
  LIGHTSENSOR = 5;
}

message ProxyMessage {
  enum Operation {
    //----------ATTESTATION-----------
    ATTEST_GENERATE_SIGNING_KEY = 0;
    ATTEST_GET_VERIFIER_PUBLIC_KEY = 1;
    ATTEST_GET_PUBLIC_KEY = 2;
    ATTEST_SIGN_DATA = 3;
    ATTEST_VERIFY = 4;
    ATTEST_GET_RANDOM_NUMBER = 5;
    //--------------MAP--------------
    MAP_PUT = 6;
    MAP_DELETE = 7;
    MAP_GET = 8;
    MAP_LIST = 9;
    MAP_CAS = 10;
    //-----------MEMBERSHIP-----------
    MEMBERSHIP_PREJOIN = 11;
    MEMBERSHIP_JOIN = 12;
    MEMBERSHIP_LEAVE = 13;
    MEMBERSHIP_VIEW = 14;
    MEMBERSHIP_PING = 15;
    //-----------EXTENSION------------
    EXTENSION_ADD = 16;
    EXTENSION_REMOVE = 17;
    EXTENSION_GET = 18;
    //-------------POLICY-------------
    POLICY_ADD = 19;
    POLICY_REMOVE = 20;
    POLICY_GET = 21;
  }
  Operation operation = 1;
  ProtoEvidence evidence = 2;
  ProtoSchnorr signature = 3;
  bytes dataToSign = 4;

  string key = 5;
  bytes value = 6; //also serves as newData
  bytes oldData = 7;

  string deviceId = 8;
  string appId = 9;

  string code = 10;

  message ProtoPolicy {
    string policy = 1;
    bool type = 2; //false = logic expression, true = script
  }

  ProtoPolicy policy = 11;
  ProtoDeviceType deviceType = 12;

  //========PREJOIN REQUEST==========//
  bytes pubSesKey = 13;
  ProtoDeviceType type = 14;

  //=========JOIN REQUEST===========//
  bytes mac = 15;

}

message ProxyResponse {
  enum ResponseType {
    MAP_GET = 0;
    MAP_LIST = 1;
    VIEW = 2;
    EXTENSION_GET = 3;
    POLICY_GET = 4;
    PREJOIN = 5;
    JOIN = 6;
  }
  ResponseType type = 1;
  repeated bytes list = 2;
  bytes value = 3;
  message ProtoDeviceContext {
    string deviceId = 1;
    google.protobuf.Timestamp time = 2;
    ProtoDeviceType deviceType = 3;
    bytes certificate = 4;
    google.protobuf.Timestamp certExpTime = 5;
  }
  repeated ProtoDeviceContext members = 4;
  string extension = 5;
  string policy = 6;

  //======PREJOIN RESPONSE==========//
  bytes verifierPubSesKey = 7; //Gv
  bytes verifierPubKey = 8; //V
  ProtoSchnorr signatureSessionKeys = 9;  //Signv(Gv,Ga)
  bytes mac = 10; //MAC_Km(content1)

  //========JOIN RESPONSE===========//
  bytes iv = 11; //iv
  bytes encryptedData = 12; //Sign_V(Enc_A(data))
}